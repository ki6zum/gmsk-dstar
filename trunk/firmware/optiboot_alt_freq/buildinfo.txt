
A new Arduino board type needs to be created for each of the new speeds. Add the new Arduino speeds 
to the list of boards using the original 16MHz UNO board settings as a template.

The following lines need to be added to the file: "Arduino 1.0.5\hardware\arduino\boards.txt"

uno9216.name=Arduino Uno 9.216MHz
uno9216.upload.protocol=arduino
uno9216.upload.maximum_size=32256
uno9216.upload.speed=115200
uno9216.bootloader.low_fuses=0xff
uno9216.bootloader.high_fuses=0xde
uno9216.bootloader.extended_fuses=0x05
uno9216.bootloader.path=optiboot
uno9216.bootloader.file=optiboot_atmega328_9_216MHz.hex
uno9216.bootloader.unlock_bits=0x3F
uno9216.bootloader.lock_bits=0x0F
uno9216.build.mcu=atmega328p
uno9216.build.f_cpu=9216000L
uno9216.build.core=arduino
uno9216.build.variant=standard
##############################################################
uno110592.name=Arduino Uno 11.0592MHz
uno110592.upload.protocol=arduino
uno110592.upload.maximum_size=32256
uno110592.upload.speed=115200
uno110592.bootloader.low_fuses=0xff
uno110592.bootloader.high_fuses=0xde
uno110592.bootloader.extended_fuses=0x05
uno110592.bootloader.path=optiboot
uno110592.bootloader.file=optiboot_atmega328_11_0592MHz.hex
uno110592.bootloader.unlock_bits=0x3F
uno110592.bootloader.lock_bits=0x0F
uno110592.build.mcu=atmega328p
uno110592.build.f_cpu=11059200L
uno110592.build.core=arduino
uno110592.build.variant=standard
##############################################################
uno147456.name=Arduino Uno 14.7456MHz
uno147456.upload.protocol=arduino
uno147456.upload.maximum_size=32256
uno147456.upload.speed=115200
uno147456.bootloader.low_fuses=0xff
uno147456.bootloader.high_fuses=0xde
uno147456.bootloader.extended_fuses=0x05
uno147456.bootloader.path=optiboot
uno147456.bootloader.file=optiboot_atmega328_14_7456MHz.hex
uno147456.bootloader.unlock_bits=0x3F
uno147456.bootloader.lock_bits=0x0F
uno147456.build.mcu=atmega328p
uno147456.build.f_cpu=14745600L
uno147456.build.core=arduino
uno147456.build.variant=standard
##############################################################

Building Optiboot bootloaders
Before building custom versions of the Optiboot bootloader, a patch to the source code is needed along with creating an entry for each new frequency in the Makefile.

Edit the file:
"\Applications\Arduino.app\Contents\Resources\Java\hardware\arduino\bootloaders\atmega\ATmegaBOOT_168.c" around line 583

to look like this:
#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__)
while(bit_is_set(EECR,EEPE)); //Wait for previous EEPROM writes to complete
#else
// while(bit_is_set(EECR,EEWE)); //Wait for previous EEPROM writes to complete
while(!eeprom_is_ready());
// http://arduino.cc/forum/index.php?action=printpage;topic=58154.0
// Title: ATmegaBOOT_168.c bootloader does not compile with newer AVR tools
// Post by: bperrybap on April 11, 2011, 02:26:42 AM
#endif

Next, add the following lines to add new board types in the makefile:
\Arduino 1.0.5\hardware\arduino\bootloaders\optiboot\Makefile

atmega328_14756: TARGET = atmega328_14_7456MHz
atmega328_14756: MCU_TARGET = atmega328p
atmega328_14756: AVR_FREQ = 14745600L
atmega328_14756: $(PROGRAM)_atmega328_14_7456MHz.hex
atmega328_14756: $(PROGRAM)_atmega328_14_7456MHz.lst
atmega328_14756_isp: atmega328
atmega328_14756_isp: TARGET = atmega328_14_7456MHz
atmega328_14756_isp: MCU_TARGET = atmega328p
atmega328_14756_isp: HFUSE = DE
atmega328_14756_isp: LFUSE = FF
atmega328_14756_isp: EFUSE = 05
atmega328_14756_isp: isp
atmega328_14756: CFLAGS += '-DMAX_TIME_COUNT=F_CPU>>4' '-DNUM_LED_FLASHES=1' -DBAUD_RATE=115200
atmega328_14756: LDSECTIONS = -Wl,--section-start=.text=0x7e00 -Wl,--section-start=.version=0x7ffe

atmega328_9216: TARGET = atmega328_9_216MHz
atmega328_9216: MCU_TARGET = atmega328p
atmega328_9216: AVR_FREQ = 9216000L
atmega328_9216: $(PROGRAM)_atmega328_9_216MHz.hex
atmega328_9216: $(PROGRAM)_atmega328_9_216MHz.lst
atmega328_9216_isp: atmega328
atmega328_9216_isp: TARGET = atmega328_9_216MHz
atmega328_9216_isp: MCU_TARGET = atmega328p
atmega328_9216_isp: HFUSE = DE
atmega328_9216_isp: LFUSE = FF
atmega328_9216_isp: EFUSE = 05
atmega328_9216_isp: isp
atmega328_9216: CFLAGS += '-DMAX_TIME_COUNT=F_CPU>>4' '-DNUM_LED_FLASHES=1' -DBAUD_RATE=115200
atmega328_9216: LDSECTIONS = -Wl,--section-start=.text=0x7e00 -Wl,--section-start=.version=0x7ffe

atmega328_110592: TARGET = atmega328_11_0592MHz
atmega328_110592: MCU_TARGET = atmega328p
atmega328_110592: AVR_FREQ = 11059200L
atmega328_110592: $(PROGRAM)_atmega328_11_0592MHz.hex
atmega328_110592: $(PROGRAM)_atmega328_11_0592MHz.lst
atmega328_110592_isp: atmega328
atmega328_110592_isp: TARGET = atmega328_11_0592MHz
atmega328_110592_isp: MCU_TARGET = atmega328p
atmega328_110592_isp: HFUSE = DE
atmega328_110592_isp: LFUSE = FF
atmega328_110592_isp: EFUSE = 05
atmega328_110592_isp: isp
atmega328_110592: CFLAGS += '-DMAX_TIME_COUNT=F_CPU>>4' '-DNUM_LED_FLASHES=1' -DBAUD_RATE=115200
atmega328_110592: LDSECTIONS = -Wl,--section-start=.text=0x7e00 -Wl,--section-start=.version=0x7ffe

while in the folder: \Arduino 1.0.5\hardware\arduino\bootloaders\optiboot\
Run the omake.bat file from the command line

omake atmega328_9216
omake atmega328_110592
omake atmega328_14756
omake atmega328

which produces these hex files:

optiboot_atmega328_9_216MHz.hex
optiboot_atmega328_11_0592MHz.hex
optiboot_atmega328_14_7456MHz.hex
optiboot_atmega328.hex

Once the boards.txt file has been uploaded and the Arduino application has been restarted, the 3 new boards 
will be available under Tools->Boards.

When the Arduino is being programmed, the crystal on the board must match the frequency chosen in the Tools->Boards
menu.

